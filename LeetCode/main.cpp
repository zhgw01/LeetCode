//
//  main.cpp
//  LeetCode
//
//  Created by Zhang Gongwei on 4/22/13.
//  Copyright (c) 2013 Zhang Gongwei. All rights reserved.
//

#include <iostream>
#include "IRun.h"
#include "ReverseDigit.h"
#include "String2Number.h"
#include "PalindromeNumber.h"
#include "RegularExpressionMatching.h"
#include "Container.h"
#include "LCP.h"
#include "3Number.h"
#include "3SumClosest.h"
#include "4Sum.h"
#include "PhoneNumber.h"
#include "NthNode.h"
#include "ValidParentheses.h"
#include "GenerateParentheses.h"
#include "MergeKList.h"
#include "SwapNode.h"
#include "ReverseKNode.h"
#include "RemoveDuplicate.h"
#include "RemoveElement.h"
#include "StrStr.h"
#include "DivideInteger.h"
#include "ConCatWords.h"
#include "NextPermutation.h"
#include "LongestValidParentheses.h"
#include "SearchRSA.h"
#include "SearchRange.h"
#include "SearchInsertPosition.h"
#include "CombineSum.h"
#include "CombineSumUnique.h"
#include "FindMissingValue.h"
#include "RainWater.h"
#include "MultiplyString.h"
#include "WildCardMatch.h"
#include "JumpGame.h"
#include "JumpGameDetermine.h"
#include "Permutation.h"
#include "UniquePermuation.h"
#include "RotateImage.h"
#include "Anagram.h"
#include "PowerN.h"
#include "NQueue.h"
#include "NQueueII.h"
#include "MaximumSubArray.h"
#include "SpiralMatrix.h"
#include "MergeInterval.h"
#include "InsertInterval.h"
#include "LastWorldLength.h"
#include "KPermutation.h"
#include "RotateList.h"
#include "UniquePath.h"
#include "UniquePathII.h"
#include "MiniumPathSum.h"
#include "MergeTwoSortedList.h"
#include "SimplifyPath.h"
#include "Search2DMatrix.h"
#include "EditDistance.h"
#include "SortColors.h"
#include "ClimbingStairs.h"
#include "MiniumWindow.h"
#include "InorderTraversal.h"
#include "BuildPreOrder.h"
#include "UniqueBST.h"
#include "ValidateBST.h"
#include "RecoverBST.h"
#include "SameTree.h"
#include "SymmetricTree.h"
#include "LevelTraversal.h"
#include "ZigZagTraversal.h"
#include "MaximumDepth.h"
#include "BalancedTree.h"
#include "MinimumDepth.h"
#include "Array2BST.h"
#include "SortedList2BST.h"
#include "FlattenBST.h"
#include "BTPathSum.h"
#include "PathSum.h"
#include "PathSumII.h"
#include "DistincSubSequence.h"
#include "NextRightNode.h"
#include "NextRightNodeII.h"
#include "PascalTriangle.h"
#include "PascalTriangleII.h"
#include "Triangle.h"
#include "Stock.h"
#include "StockII.h"
#include "StockIII.h"
#include "ValidPalindrome.h"
#include "WordLadder.h"
#include "WordLadderII.h"
#include "LongestConsecutiveSequence.h"
#include "LeafSum.h"
#include "TwoDRegion.h"
#include "PalindromePartition.h"
#include "PalindromePartitionII.h"
#include "CloneGraph.h"
#include "GasStation.h"
#include "Candy.h"
#include "SingleNumber.h"
#include "CopyList.h"
#include "WordBreak.h"
#include "WordBreakII.h"
#include "LinkedListCycleII.h"
#include "ReorderList.h"
#include "Preorder.h"
#include "Postorder.h"
#include "LRUCache.h"
#include "InsertionSort.h"
#include "SortList.h"

int main(int argc, const char * argv[])
{

    // insert code here...
    std::cout << "Start To Run Demo!\n";
    REGISTER_CLASS(SortList);
    DemoFactory::getInstance()->run();
    return 0;
}

